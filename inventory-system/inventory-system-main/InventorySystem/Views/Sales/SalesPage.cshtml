@model InventorySystem.Models.TransactionDataResponse

@{
    ViewData["Title"] = "Sales Data";
}

<!-- Include CSS files -->
<link rel="stylesheet" href="~/css/salespage.css" asp-append-version="true" />

<!-- Page Header with Go Back Icon -->
<div class="d-flex align-items-center mb-4" style="width: 1000px; margin: 30px 0 0 26px; align-items:center;">
    <a asp-action="Index" asp-controller="Dashboard" class="text-decoration-none me-3 text-dark" title="Go Back">
        <i class="fa-solid fa-arrow-left fs-3"></i>
    </a>
    <h1 class="mb-0 fw-bold" style="color: #343a40; font-size: 28px; margin:0;">Sales</h1>
</div>

<!-- Success Message Alert -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-bs-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<input type="text" class="search-bar" id="search-bar" placeholder="Search sales made by Transaction Number..."/>

<!-- Total Sales and Stats -->
<div class="row">
    <div class="card">
        <h3>Total Sales</h3>
        <p>₱@Model.TotalSales.ToString("N2")</p>
    </div>
    <div class="card">
        <h3>Sold Products</h3>
        <p>@Model.TotalSoldProducts</p>
    </div>
    <div class="card">
        <h3>Total Products</h3>
        <p>@Model.TotalDistinctProducts</p>
    </div>
</div>

<!-- Centered Table Container with Animation -->
<div class="table-container">
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>Transaction Number</th>
                <th>Product Name</th>
                <th>Product Category</th>
                <th>Transaction Date</th>
                <th>Quantity</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Transactions != null)
            {
                @foreach (var transaction in Model.Transactions)
                {
                    <tr>
                        <td>@transaction.TransactionNumber</td>
                        <td>@transaction.ProductName</td>
                        <td>@transaction.ProductCategory</td>
                        <td>@transaction.TransactionDate.ToString("yyyy-MM-dd")</td>
                        <td>@transaction.Quantity</td>
                        <td>₱@transaction.Amount.ToString("N2")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">No transactions available.</td>
                </tr>
            }

        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add a row for the "No transactions found" message
            var noTransactionsRow = $(
                '<tr class="no-transactions-row" style="display:none; text-align: center;">' +
                '<td colspan="100%" style="text-align: center; padding: 20px; font-size: 16px;">No transactions found.</td>' +
                '</tr>'
            );
            $('table tbody').append(noTransactionsRow); // Append it to the table body

            // Trigger search on input change
            $('#search-bar').on('input', function() {
                var searchTerm = $(this).val().toLowerCase(); // Get the input value and convert to lowercase
                var visibleRows = 0;

                $('table tbody tr').each(function() {
                    if ($(this).hasClass('no-transactions-row')) return; // Skip the "No transactions found" row

                    var transactionNumber = $(this).find('td:first').text().toLowerCase(); // Only check the first column (Transaction Number)

                    if (transactionNumber.indexOf(searchTerm) > -1) {
                        $(this).show(); // Show the row if the transaction number contains the search term
                        visibleRows++;
                    } else {
                        $(this).hide(); // Hide the row if the transaction number doesn't contain the search term
                    }
                });

                // Show or hide the "No transactions found" message based on visible rows
                if (visibleRows === 0) {
                    noTransactionsRow.show(); // Show the message
                } else {
                    noTransactionsRow.hide(); // Hide the message
                }
            });
        });

        // Function to adjust the margin-bottom based on the table container's height
        function adjustTableMargin() {
            var tableContainer = document.querySelector('.table-container');
            var containerHeight = tableContainer.offsetHeight;

            if (containerHeight < 820) {
                // Decrease height by 50-70px and add margin-bottom
                var marginBottom = Math.floor((820 - containerHeight) / 50) * 50; // Increment margin in steps of 50px
                tableContainer.style.marginBottom = Math.max(marginBottom, 50) + "px"; // Minimum margin of 50px
            }
        }

        // Adjust margin on initial load
        adjustTableMargin();

        // Adjust margin on window resize
        window.addEventListener('resize', adjustTableMargin);
    </script>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
